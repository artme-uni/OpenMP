omp_set_num_threads(4); - задается число потоков

int n = omp_get_num_threads(); - получение числа потоков
int i = omp_get_thread_num(); - номер текущенго потока

#pragma omp parallel { параллельный кусок кода }
- shared() - одна область памяти
- private() - копия новой переменной
- firstprivate() - копия переменной до входа
- lastprivate() - копия с сохранением занчения
- reduction() - для операция редукции

- default(shared|private|none) - тип пернеменных по умолчанию
- schedule(type[,chank]) - способ распределения между потоками
	static - равномерное последовательное распредедение
	dynamic - обрабатывается порциями
	guided - размер порции изменяется

#pragma omp for - разделить цикл между потоками по итерациям
#pragma omp sections - разделить по секциям
#pragma omp single - действия в параллельной секции для одного потока
